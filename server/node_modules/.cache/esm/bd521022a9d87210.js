let express,createComment,deleteComment,getAllComments,updateComment,adminGuard,authGuard;_a9d‍.x([["default",()=>_a9d‍.o]]);_a9d‍.w("express",[["default",["express"],function(v){express=v}]]);_a9d‍.w("../controllers/commentControllers",[["createComment",["createComment"],function(v){createComment=v}],["deleteComment",["deleteComment"],function(v){deleteComment=v}],["getAllComments",["getAllComments"],function(v){getAllComments=v}],["updateComment",["updateComment"],function(v){updateComment=v}]]);_a9d‍.w("../middleware/authMiddleware",[["adminGuard",["adminGuard"],function(v){adminGuard=v}],["authGuard",["authGuard"],function(v){authGuard=v}]]);
const router = express.Router();








router
  .route("/")
  .post(authGuard, createComment)
  .get(authGuard, adminGuard, getAllComments);
router
  .route("/:commentId")
  .put(authGuard, updateComment)
  .delete(authGuard, deleteComment);

_a9d‍.d(router);
